version: '3.8'

services:
  # MongoDB 服务
  mongodb:
    image: mongo:latest
    container_name: chainintelai-mongodb
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
    networks:
      - chainintelai-network

  # Redis 服务
  redis:
    image: redis:latest
    container_name: chainintelai-redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - chainintelai-network

  # 后端服务
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: chainintelai-backend
    restart: always
    ports:
      - "3000:3000"
      - "9090:9090" # Prometheus 指标端口
    depends_on:
      - mongodb
      - redis
    environment:
      - NODE_ENV=production
      - PORT=3000
      - MONGODB_URI=mongodb://admin:password@mongodb:27017/chainintelai?authSource=admin
      - REDIS_URL=redis://redis:6379
      - LOG_LEVEL=info
      - ETH_RPC_URL=${ETH_RPC_URL}
      - BSC_RPC_URL=${BSC_RPC_URL}
      - POLYGON_RPC_URL=${POLYGON_RPC_URL}
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - chainintelai-network
    command: yarn start

  # 前端服务
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: chainintelai-frontend
    restart: always
    ports:
      - "80:3000"
    depends_on:
      - backend
    environment:
      - NEXT_PUBLIC_API_URL=http://backend:3000/api
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - chainintelai-network
    command: yarn start

networks:
  chainintelai-network:
    driver: bridge

volumes:
  mongodb_data:
  redis_data: 